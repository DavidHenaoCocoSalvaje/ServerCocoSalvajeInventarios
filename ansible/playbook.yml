---
- name: Deploy server
  hosts: hostinger
  vars:
      # La variable git_branch se pasa como un extra-var desde el script de shell
      # y se usa para construir los nombres de archivos y tags.
      # Si no se provee, el valor por defecto ser√° 'main'.
      git_branch: "{{ git_branch | default('main') }}"
      image_tag: "{% if git_branch == 'main' %}latest{% else %}{{ git_branch }}{% endif %}"
      local_image_path: "{{ playbook_dir }}/../build/integraciones-api-{{ image_tag }}.tar"
      local_env_path: "{{ playbook_dir }}/../{% if git_branch == 'main' %}.env.production{% else %}.env.{{ git_branch }}{% endif %}"
      local_compose_path: "{{ playbook_dir }}/../docker-compose{% if git_branch != 'main' %}.{{ git_branch }}{% endif %}.yml"
      image_name: "integraciones-api:{{ image_tag }}"
      remote_folder: "/home/coco/images/backend/integraciones/{{ git_branch }}"

  tasks:
      - name: Send docker-image
        ansible.builtin.copy:
            src: "{{ local_image_path }}"
            dest: "{{ remote_folder }}/{{ image_name }}.tar"
            mode: "0644"

      - name: Send .env
        ansible.builtin.copy:
            src: "{{ local_env_path }}"
            dest: "{{ remote_folder }}/.env"
            mode: "0600"

      - name: Send docker compose file
        ansible.builtin.copy:
            src: "{{ local_compose_path }}"
            dest: "{{ remote_folder }}/docker-compose.yml"
            mode: "0600"

      - name: Load docker-image
        ansible.builtin.command:
            cmd: "docker load -i {{ remote_folder }}/{{ image_name }}.tar"
        register: load_result
        changed_when: "'Loaded image' in load_result.stderr"

      - name: Ensure logs directory exists and has correct permissions
        ansible.builtin.file:
            path: "{{ remote_folder }}/logs"
            state: directory
            mode: "0755"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            recurse: true

      - name: Run container
        ansible.builtin.command:
            cmd: "docker compose up -d"
            chdir: "{{ remote_folder }}"
        register: run_result
        changed_when: "'Creating' in run_result.stdout or 'Recreating' in run_result.stdout"

      - name: Clean docker
        ansible.builtin.command:
            cmd: "docker system prune -a -f"
        register: clean_result
        changed_when: "'Total reclaimed space' in clean_result.stdout"
